version: '3'

services:

  elasticsearch:
    build:
      context: elasticsearch/
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      app_net:
        ipv4_address: 172.0.0.50

  logstash:
    build:
      context: logstash/
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      app_net:
        ipv4_address: 172.0.0.40

   # build:
   #   context: kibana/
   # volumes:
   #   - ./kibana/config/:/usr/share/kibana/config:ro
   # ports:
   #   - "5601:5601"
   # depends_on:
   #   - elasticsearch
   # networks:
   #   app_net:
   #     ipv4_address: 172.0.0.30

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: django
      MYSQL_USER: django
      MYSQL_PASSWORD: django
      MYSQL_ROOT_HOST: 'localhost'
    ports:
      - "3306:3306"
    networks:
      app_net:
        ipv4_address: 172.0.0.20
    expose:
      - "8000"
      - "3306"

  web:
    restart: always
    build: .
    ports:
      - "7000:8000"
    volumes:
      - .:/code
    command: python3 manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
      - elasticsearch
      # - kibana
      - logstash
    networks:
      app_net:
        ipv4_address: 172.0.0.10
    expose:
      - "8000"
      - "3306"

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.0.0.0/24
        # - gateway: 172.0.0.1
